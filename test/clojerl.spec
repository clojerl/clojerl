%% Specific modules to include in cover.
{
  incl_mods,
  [
   'clj_analyzer',
   'clj_cache',
   'clj_compiler',
   'clj_core',
   'clj_emitter',
   'clj_env',
   'clj_module',
   'clj_murmur3',
   'clj_namespace',
   'clj_reader',
   'clj_repl',
   'clj_scope',
   'clj_utils',
   'clojerl',
   'clojerl.Associative',
   'clojerl.Boolean',
   'clojerl.Closeable',
   'clojerl.Cons',
   'clojerl.Counted',
   'clojerl.erlang.Fn',
   'clojerl.erlang.List',
   'clojerl.erlang.Map',
   'clojerl.erlang.Process',
   'clojerl.erlang.Reference',
   'clojerl.erlang.Tuple',
   'clojerl.FakeVar',
   'clojerl.Float',
   'clojerl.IColl',
   'clojerl.IDeref',
   'clojerl.IEquiv',
   'clojerl.IFn',
   'clojerl.IHash',
   'clojerl.ILookup',
   'clojerl.IMap',
   'clojerl.IMeta',
   'clojerl.Indexed',
   'clojerl.Integer',
   'clojerl.IReader',
   'clojerl.ISeq',
   'clojerl.ISequential',
   'clojerl.ISet',
   'clojerl.IStack',
   'clojerl.IWriter',
   'clojerl.Keyword',
   'clojerl.LazySeq',
   'clojerl.List',
   'clojerl.Map',
   'clojerl.MultiFn',
   'clojerl.Named',
   'clojerl.Nil',
   'clojerl.protocol',
   'clojerl.reader.ReaderConditional',
   'clojerl.Seqable',
   'clojerl.Set',
   'clojerl.String',
   'clojerl.Stringable',
   'clojerl.StringReader',
   'clojerl.StringWriter',
   'clojerl_sup',
   'clojerl.Symbol',
   'clojerl.Var',
   'clojerl.Vector',
   'clojure.core',
   'erlang.io.File',
   'erlang.io.PushbackReader'
  ]
}.
%% Export coverage data for jenkins.
{export, "../logs/cover.data"}.
