%% Specific modules to include in cover.
{
  incl_mods,
  [
    'clj_analyzer',
    'clj_compiler',
    'clj_core',
    'clj_emitter',
    'clj_env',
    'clj_namespace',
    'clj_reader',
    'clj_utils',
    'clojerl',
    'clojerl.Boolean',
    'clojerl.Counted',
    'clojerl.IColl',
    'clojerl.IDeref',
    'clojerl.ILookup',
    'clojerl.IMeta',
    'clojerl.ISeq',
    'clojerl.Integer',
    'clojerl.Keyword',
    'clojerl.Keyword.clojerl.IMeta',
    'clojerl.Keyword.clojerl.Named',
    'clojerl.List',
    'clojerl.List.clojerl.IColl',
    'clojerl.List.clojerl.IMeta',
    'clojerl.Map',
    'clojerl.Map.clojerl.Counted',
    'clojerl.Map.clojerl.IColl',
    'clojerl.Map.clojerl.IMeta',
    'clojerl.Map.clojerl.ISeq',
    'clojerl.Map.clojerl.Seqable',
    'clojerl.Map.clojerl.Stringable',
    'clojerl.Named',
    'clojerl.Seqable',
    'clojerl.Set',
    'clojerl.Set.clojerl.Counted',
    'clojerl.Set.clojerl.IColl',
    'clojerl.Set.clojerl.ILookup',
    'clojerl.Set.clojerl.IMeta',
    'clojerl.Set.clojerl.ISeq',
    'clojerl.Set.clojerl.Seqable',
    'clojerl.Set.clojerl.Stringable',
    'clojerl.String',
    'clojerl.Stringable',
    'clojerl.Symbol',
    'clojerl.Symbol.clojerl.IMeta',
    'clojerl.Symbol.clojerl.Named',
    'clojerl.Var',
    'clojerl.Var.clojerl.IDeref',
    'clojerl.Vector',
    'clojerl.Vector.clojerl.Counted',
    'clojerl.Vector.clojerl.IColl',
    'clojerl.Vector.clojerl.IMeta',
    'clojerl.Vector.clojerl.ISeq',
    'clojerl.Vector.clojerl.ISequential',
    'clojerl.Vector.clojerl.Seqable',
    'clojerl.Vector.clojerl.Stringable',
    'clojerl.erlang.Atom',
    'clojerl.erlang.List',
    'clojerl.erlang.Map.clojerl.Stringable',
    'clojerl.nil',
    'clojerl.protocol',
    'cover_report'
  ]
}.
%% Export coverage data for jenkins.
{export, "../logs/cover.data"}.
