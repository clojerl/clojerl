%% Specific modules to include in cover.
{
  incl_mods,
  [
clj_analyzer,
clj_cache,
clj_compiler,
clj_core,
clj_emitter,
clj_env,
clj_module,
clj_murmur3,
clj_namespace,
clj_reader,
clj_scope,
clj_utils,
clojerl,
'clojerl.Associative',
'clojerl.Boolean',
'clojerl.Cons',
'clojerl.Counted',
'clojerl.Float',
'clojerl.IColl',
'clojerl.IDeref',
'clojerl.IEquiv',
'clojerl.IFn',
'clojerl.IHash',
'clojerl.ILookup',
'clojerl.IMap',
'clojerl.IMeta',
'clojerl.IRecord',
'clojerl.ISeq',
'clojerl.ISequential',
'clojerl.ISet',
'clojerl.IStack',
'clojerl.IType',
'clojerl.Indexed',
'clojerl.Integer',
'clojerl.Keyword',
'clojerl.LazySeq',
'clojerl.List',
'clojerl.Map',
'clojerl.MultiFn',
'clojerl.Named',
'clojerl.Nil',
'clojerl.Seqable',
'clojerl.Set',
'clojerl.String',
'clojerl.Stringable',
'clojerl.Symbol',
'clojerl.Var',
'clojerl.Vector',
'clojerl.erlang.Fn',
'clojerl.erlang.List',
'clojerl.erlang.Map',
'clojerl.erlang.Process',
'clojerl.erlang.Reference',
'clojerl.erlang.Tuple',
'clojerl.protocol',
'clojerl.reader.ReaderConditional',
clojerl_sup,
'clojure.core',
'erlang.io.Closeable',
'erlang.io.File',
'erlang.io.IReader',
'erlang.io.IWriter',
'erlang.io.PushbackReader',
'erlang.io.StringReader',
'erlang.io.StringWriter',
'erlang.util.Regex',
'erlang.util.UUID'
]
}.
%% Export coverage data for jenkins.
{export, "../logs/cover.data"}.
