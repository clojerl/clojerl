%% Erlang compilation

{ erl_opts
, [ debug_info
  , {platform_define, "^2", 'ETS_CAS'}
  , {platform_define, "^(R|1|20)", 'FUN_STACKTRACE'}
  ]
}.

{src_dirs, ["src", "bootstrap"]}.

%% Clojerl compilation

{clje_src_dirs,  ["src/clj"]}.
{clje_test_dirs, ["test/clj"]}.
{clje_compile_first, ["clojure/core.clje"]}.
{ clje_exclude
, [ "clojure/core_print.clje"
  , "clojure/core_deftype.clje"
  , "clojure/core/protocols.clje"
  , "clojure/instant.clje"
  , "clojure/uuid.clje"

  , "clojure/pprint/cl_format.clje"
  , "clojure/pprint/column_writer.clje"
  , "clojure/pprint/dispatch.clje"
  , "clojure/pprint/pprint_base.clje"
  , "clojure/pprint/pretty_writer.clje"
  , "clojure/pprint/print_table.clje"
  , "clojure/pprint/utilities.clje"
  ]
}.

{ provider_hooks
, [{post, [{compile, {clojerl, compile}}]}]
}.

%% Shell

{shell, [{apps, [clojerl]}]}.

%% Dialyzer

{ dialyzer
  %% Don't include (bootstrap) clojure.core in analysis
, [{exclude_mods, ['clojure.core']}]
}.

%% Plugins

{ plugins
, [ { rebar3_clojerl
    , {git, "https://github.com/clojerl/rebar3_clojerl", {tag, "0.6.4"}}
    }
  ]
}.

%% Profiles

{ profiles,
  [ { dialyzer
    , [{overrides, [{override, [{provider_hooks, []}]}]}]
    }
  , { dev
    , [ { deps
        , [{eflame, ".*", {git, "https://github.com/jfacorro/eflame", {branch, "various.improvements"}}}]
        }
      ]
    }
  , { test
    , [ {src_dirs, ["src", "bootstrap", "scripts"]}
      , { deps
        , [ {xref_runner, {git, "https://github.com/inaka/xref_runner.git", {tag, "0.2.5"}}}
          , {meck,        {git, "https://github.com/eproxus/meck",          {tag, "0.8.10"}}}
          , { data_generators
            , {git, "https://github.com/clojerl/data.generators", {branch, "clojerl"}}
            }
          , { test_generative
            , {git, "https://github.com/clojerl/test.generative", {branch, "clojerl"}}
            }
          , { test_check
            , {git, "https://github.com/clojerl/test.check", {branch, "clojerl"}}
            }
          ]
        }
      , { overrides
        , [ {override, test_check,      [{deps, []}, {provider_hooks, []}]}
          , {override, data_generators, [{deps, []}]}
          , { override
            , test_generative
            , [ { deps
                , [ { data_generators
                    , {git, "https://github.com/clojerl/data.generators", {branch, "clojerl"}}
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    }
  ]
}.

%% Coverage

%% Temporarily disable cover compilation. It's not working
%% properly when using the rebar3_clojerl plugin for compilation.

%% {cover_enabled, true}.
